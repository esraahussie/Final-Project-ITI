@model Uber.DAL.Entities.User
@{
    ViewData["Title"] = "Edit Rider";
}

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 20px;
    }

    .header {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        padding: 20px 0;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        border-radius: 15px;
        margin-bottom: 30px;
    }

    .header-content {
        text-align: center;
        padding: 0 20px;
    }

    .header h1 {
        font-size: 28px;
        font-weight: 600;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .header-nav {
        margin-top: 15px;
    }

    .header-nav a {
        color: white;
        text-decoration: none;
        margin: 0 15px;
        font-weight: 500;
        transition: all 0.3s ease;
        padding: 8px 16px;
        border-radius: 20px;
        display: inline-block;
    }

    .header-nav a:hover {
        background: rgba(255,255,255,0.2);
        transform: translateY(-2px);
    }

    .edit-container {
        max-width: 800px;
        margin: 0 auto;
        background: white;
        border-radius: 20px;
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        overflow: hidden;
    }

    .edit-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        text-align: center;
    }

    .edit-header h2 {
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .edit-header p {
        opacity: 0.9;
        font-size: 16px;
    }

    .edit-body {
        padding: 40px;
    }

    .form-section {
        margin-bottom: 30px;
    }

    .form-section h3 {
        color: #2c3e50;
        margin-bottom: 20px;
        font-size: 18px;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 10px;
        padding-bottom: 10px;
        border-bottom: 2px solid #e9ecef;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-group label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #495057;
        font-size: 14px;
    }

    .form-control {
        width: 100%;
        padding: 12px 16px;
        border: 2px solid #e9ecef;
        border-radius: 10px;
        font-size: 14px;
        transition: all 0.3s ease;
        background: #f8f9fa;
    }

    .form-control:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        background: white;
    }

    .form-control:disabled {
        background: #e9ecef;
        color: #6c757d;
        cursor: not-allowed;
    }

    .form-row {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
    }

    .current-photo {
        text-align: center;
        margin-bottom: 20px;
    }

    .current-photo img {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        border: 3px solid #e9ecef;
        object-fit: cover;
    }

    .file-input-group {
        position: relative;
        margin-bottom: 20px;
    }

    .file-input {
        position: absolute;
        opacity: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }

    .file-input-label {
        display: block;
        padding: 12px 20px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        text-align: center;
        border-radius: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 600;
    }

    .file-input-label:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    }

    .file-name {
        margin-top: 10px;
        padding: 8px 12px;
        background: #f8f9fa;
        border-radius: 6px;
        color: #495057;
        font-size: 12px;
        text-align: center;
        display: none;
    }

    .status-toggle {
        display: flex;
        align-items: center;
        gap: 15px;
        margin-bottom: 20px;
    }

    .toggle-switch {
        position: relative;
        width: 60px;
        height: 30px;
        background: #ccc;
        border-radius: 30px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .toggle-switch.active {
        background: #28a745;
    }

    .toggle-slider {
        position: absolute;
        top: 2px;
        left: 2px;
        width: 26px;
        height: 26px;
        background: white;
        border-radius: 50%;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .toggle-switch.active .toggle-slider {
        transform: translateX(30px);
    }

    .toggle-label {
        font-weight: 600;
        color: #2c3e50;
        font-size: 14px;
    }

    .actions {
        display: flex;
        gap: 20px;
        justify-content: center;
        margin-top: 40px;
        padding-top: 30px;
        border-top: 2px solid #e9ecef;
    }

    .btn {
        padding: 15px 30px;
        border: none;
        border-radius: 12px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        min-width: 140px;
        justify-content: center;
    }

    .btn-secondary {
        background: #6c757d;
        color: white;
    }

    .btn-secondary:hover {
        background: #5a6268;
        transform: translateY(-2px);
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
    }

    .btn-danger {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        color: white;
    }

    .btn-danger:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(220, 53, 69, 0.3);
    }

    .alert {
        padding: 15px 20px;
        border-radius: 12px;
        margin-bottom: 25px;
        font-weight: 500;
        border: 1px solid;
    }

    .alert-success {
        background: #d4edda;
        color: #155724;
        border-color: #c3e6cb;
    }

    .alert-danger {
        background: #f8d7da;
        color: #721c24;
        border-color: #f5c6cb;
    }

    media (max-width: 768px) {
        .form-row {
            grid-template-columns: 1fr;
        }

        .actions {
            flex-direction: column;
        }

        .btn {
            width: 100%;
        }

        .edit-container {
            margin: 0 10px;
        }

        .edit-body {
            padding: 25px;
        }
    }
</style>

<div class="header">
    <div class="header-content">
        <h1>üöó Uber Admin Dashboard</h1>
        <div class="header-nav">
            <a asp-controller="Admin" asp-action="AdminDashBoard">Dashboard</a>
            <a asp-controller="Admin" asp-action="Admin_Drivers">Drivers</a>
            <a asp-controller="Admin" asp-action="Admin_Riders">Riders</a>
            <a asp-controller="Admin" asp-action="Admin_Rides">Rides</a>
            <a asp-controller="Admin" asp-action="Admin_Admines">Admins</a>
        </div>
    </div>
</div>

<div class="edit-container">
    <div class="edit-header">
        <h2>‚úèÔ∏è Edit Rider</h2>
        <p>Update information for @Model.Name</p>
    </div>

    <div class="edit-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                ‚úÖ @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                ‚ùå @TempData["ErrorMessage"]
            </div>
        }

        <form asp-controller="Admin" asp-action="EditUser" method="post">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="CreatedAt" />
            <input type="hidden" asp-for="IsDeleted" />

            <div class="form-section">
                <h3>üë§ Personal Information</h3>
                
                <div class="form-group">
                    <label asp-for="Name">Full Name</label>
                    <input asp-for="Name" class="form-control" placeholder="Enter rider's full name" required />
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="Email">Email Address</label>
                        <input asp-for="Email" class="form-control" disabled />
                        <small style="color: #6c757d; font-size: 12px;">Email cannot be changed</small>
                    </div>

                    <div class="form-group">
                        <label asp-for="PhoneNumber">Phone Number</label>
                        <input asp-for="PhoneNumber" class="form-control" disabled />
                        <small style="color: #6c757d; font-size: 12px;">Phone number cannot be changed</small>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label asp-for="DateOfBirth">Date of Birth</label>
                        <input asp-for="DateOfBirth" type="date" class="form-control" required />
                    </div>

                    <div class="form-group">
                        <label>Gender</label>
                        <input value="@Model.Gender.ToString()" class="form-control" disabled />
                        <small style="color: #6c757d; font-size: 12px;">Gender cannot be changed</small>
                    </div>
                </div>

                <div class="form-group">
                    <label>Age</label>
                    <input value="@Model.Age() years" class="form-control" disabled />
                    <small style="color: #6c757d; font-size: 12px;">Calculated automatically</small>
                </div>
            </div>

            <div class="form-section">
                <h3>üìä Account Information</h3>
                
                <div class="form-row">
                    <div class="form-group">
                        <label>Account Created</label>
                        <input value="@Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")" class="form-control" disabled />
                    </div>

                    <div class="form-group">
                        <label>Total Rides</label>
                        <input value="@(Model.Rides?.Count ?? 0) rides" class="form-control" disabled />
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group">
                        <label>Rating</label>
                        <input value="@Model.Rating().ToString("F1")/5 ‚≠ê (@Model.TotalRatings ratings)" class="form-control" disabled />
                    </div>

                    <div class="form-group">
                        <label>Wallet Balance</label>
                        <input value="$@Model.Balance.ToString("F2")" class="form-control" disabled />
                    </div>
                </div>
            </div>

            <div class="form-section">
                <h3>üîÑ Account Status</h3>
                
                <div class="status-toggle">
                    <div class="toggle-switch @(Model.IsDeleted ? "" : "active")" onclick="toggleStatus()">
                        <div class="toggle-slider"></div>
                    </div>
                    <span class="toggle-label" id="statusLabel">@(Model.IsDeleted ? "Inactive" : "Active")</span>
                    <input type="hidden" id="isActive" name="isActive" value="@(!Model.IsDeleted).ToString().ToLower()" />
                </div>
            </div>

            <div class="actions">
                <a asp-controller="Admin" asp-action="Admin_Riders" class="btn btn-secondary">
                    ‚Ü©Ô∏è Back to Riders
                </a>
                
                <button type="submit" class="btn btn-primary">
                    üíæ Save Changes
                </button>
                
                <button type="button" class="btn btn-danger" onclick="deleteUser('@Model.Id', '@Model.Name')">
                    üóëÔ∏è Delete Rider
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal" style="display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; background-color: rgba(0,0,0,0.5);">
    <div style="background-color: white; margin: 15% auto; padding: 30px; border-radius: 15px; width: 90%; max-width: 500px; text-align: center; box-shadow: 0 15px 35px rgba(0,0,0,0.3);">
        <h3 style="color: #dc3545; margin-bottom: 20px;">‚ö†Ô∏è Confirm Deletion</h3>
        <p style="margin-bottom: 25px; color: #495057;">Are you sure you want to delete rider <strong id="riderNameToDelete"></strong>?</p>
        <p style="margin-bottom: 25px; color: #6c757d; font-size: 14px;">This action cannot be undone and will remove all associated data.</p>
        
        <form id="deleteForm" method="post" action="@Url.Action("DeleteUser", "Admin")" style="display: inline;">
            <input type="hidden" id="userIdToDelete" name="id" />
            <button type="submit" class="btn btn-danger" style="margin-right: 10px;">üóëÔ∏è Delete Rider</button>
        </form>
        
        <button onclick="closeModal('deleteModal')" class="btn" style="background: #6c757d; color: white;">‚ùå Cancel</button>
    </div>
</div>

<script>
    function toggleStatus() {
        const toggle = document.querySelector('.toggle-switch');
        const statusLabel = document.getElementById('statusLabel');
        const isActiveInput = document.getElementById('isActive');
        
        toggle.classList.toggle('active');
        
        if (toggle.classList.contains('active')) {
            statusLabel.textContent = 'Active';
            isActiveInput.value = 'true';
        } else {
            statusLabel.textContent = 'Inactive';
            isActiveInput.value = 'false';
        }
    }

    function deleteUser(userId, userName) {
        document.getElementById('riderNameToDelete').textContent = userName;
        document.getElementById('userIdToDelete').value = userId;
        document.getElementById('deleteModal').style.display = 'block';
    }

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    // Close modal when clicking outside
    window.onclick = function(event) {
        const modal = document.getElementById('deleteModal');
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    }

    // Auto-hide alerts after 5 seconds
    setTimeout(function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            alert.style.opacity = '0';
            setTimeout(() => alert.remove(), 300);
        });
    }, 5000);
</script>
